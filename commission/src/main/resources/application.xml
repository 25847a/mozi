<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jaxws="http://cxf.apache.org/jaxws" 
	xsi:schemaLocation="  
        http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context-4.3.xsd  
        http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd 
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
        http://www.springframework.org/schema/task 
        http://www.springframework.org/schema/task/spring-task-4.3.xsd 
        http://cxf.apache.org/jaxws  
    	http://cxf.apache.org/schemas/jaxws.xsd">

	<!-- 开启定时任务 -->
	<task:annotation-driven ></task:annotation-driven>
	<!-- 采用注解方式配置MVC,是对包进行扫描，实现注释驱动Bean定义，同时将bean自动注入容器中使用。即解决了@Controller标识的类的bean的注入和使用 -->
	<context:annotation-config></context:annotation-config>
	<!-- 自动扫描(自动注入)-->
	<context:component-scan base-package="com.plasma">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- <aop:aspectj-autoproxy /> -->  

	<!-- 导入排队组件配置文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:*.properties</value>
			</list>
		</property>
	</bean>
	<!-- 数据库连接池配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
		<property name="driverClass">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.user}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="maxIdleTime">
			<value>${jdbc.maxIdleTime}</value>
		</property>
		<property name="initialPoolSize">
			<value>${jdbc.initialPoolSize}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${jdbc.idleConnectionTestPeriod}</value>
		</property>
		<property name="breakAfterAcquireFailure">
			<value>${jdbc.breakAfterAcquireFailure}</value>
		</property>
		<property name="acquireRetryAttempts">
			<value>${jdbc.acquireRetryAttempts}</value>
		</property>
		<property name="checkoutTimeout">
			<value>${jdbc.checkoutTimeout}</value>
		</property>
		<property name="minPoolSize">  
            <value>${jdbc.minPoolSize}</value>  
        </property> 
        <property name="maxPoolSize">  
            <value>${jdbc.maxPoolSize}</value>  
        </property> 
	</bean>

	<!-- 2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源 MyBatis定义数据源,同意加载配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:sqlClientMapper.xml" />
	</bean>

	<!-- 3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory 
		basePackage:指定sql映射文件/接口所在的包（自动扫描） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.plasma.buss.*.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<!-- 定义事务 -->
    <bean id = "transactionManager"
          class = "org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name = "dataSource" ref = "dataSource" />
    </bean>
    <!-- 使用注解定义事务 -->
    <tx:annotation-driven transaction-manager = "transactionManager" />

</beans>  